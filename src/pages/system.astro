---
import Card from "../components/Card.astro";
import PageLayout from "../layouts/PageLayout.astro";
---

<PageLayout
  title="System overlook"
  subtitle="Take a deeper look into the development of our app..."
  active="faunafinder"
>
  <Card
    textFirst={false}
    title="Developing our app"
    content="To ensure the robustness and efficiency of our applications, we employed a combination of cutting-edge technologies. Our development stack included Spring Boot and dom4j for application development, along with Mockito and Espresso for testing. Additionally, we chose to deploy our applications on AWS and Heroku for scalable and reliable hosting. Spring Boot, a powerful Java-based framework, provided the foundation for our application development. It allowed us to quickly build and deploy server-side applications by providing a streamlined development experience and out-of-the-box support for common application features. The simplicity and convention-over-configuration approach of Spring Boot accelerated our development process and ensured the maintainability of our codebase. Dom4j, a Java library for working with XML, played a crucial role in handling XML data and parsing within our applications. It offered a comprehensive set of APIs for reading, writing, and manipulating XML documents, enabling us to process and extract relevant data efficiently."
    imageUrl="/system/1.jpg"
  />
  <Card
    title="IDEs"
    content="Our applications were developed using industry-leading integrated development environments (IDEs) to ensure robust and efficient coding practices. For the desktop admin application, we utilised VS Code, a highly versatile and powerful IDE. Its extensive ecosystem of extensions and plugins enabled our development team to enhance productivity and streamline the coding process. With features like syntax highlighting, intelligent code completion, and Git integration, VS Code facilitated seamless collaboration and version control among our developers. The flexibility of VS Code allowed us to tailor the coding environment to our preferences, optimising efficiency and code quality. In parallel, the user application was built using Android Studio, the official IDE for Android app development. Android Studio provided us with a comprehensive set of tools specifically designed for building Android applications. Its intuitive interface and specialized features allowed us to create a visually appealing and user-friendly mobile app. The IDE's layout editor, code analysis tools, and extensive emulator support facilitated rapid iteration and testing, ensuring the delivery of a high-quality user experience."
    imageUrl="/system/2.jpg"
  />
  <Card
    textFirst={false}
    title="Testing"
    content="Testing is an integral part of our development process, and we utilised Mockito and Espresso to ensure the quality and reliability of our applications. Mockito, a popular Java testing framework, facilitated the creation of mock objects and allowed us to perform unit tests with ease. Espresso, on the other hand, is a powerful testing framework specifically designed for Android applications. It enabled us to write automated UI tests to validate the behavior and functionality of our mobile app."
  />
  <Card
    title="Deployment"
    content="For hosting our applications, we chose a combination of AWS and Heroku. AWS provided us with a scalable and reliable cloud infrastructure, allowing us to deploy and manage our applications with ease. Its extensive suite of services, such as Amazon EC2 for virtual server instances and Amazon RDS for managed databases, provided us with a flexible and robust hosting environment. Additionally, Heroku, a cloud platform known for its simplicity and developer-friendly features, offered us an alternative deployment option with easy scalability and integration with our code repositories."
    imageUrl="/system/3.png"
    />
</PageLayout>
